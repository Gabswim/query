{
  "name": "@tanstack/lit-query",
  "version": "5.50.3",
  "description": "Primitives for managing, caching and syncing asynchronous and remote data in lit",
  "author": "Gabriel Legault",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/TanStack/query.git",
    "directory": "packages/lit-query"
  },
  "homepage": "https://tanstack.com/query",
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/tannerlinsley"
  },
  "scripts": {
    "clean": "rimraf ./build && rimraf ./coverage",
    "test:eslint": "eslint ./src",
    "test:types": "pnpm run \"/^test:types:ts[0-9]{2}$/\"",
    "test:types:ts49": "node ../../node_modules/typescript49/lib/tsc.js -p tsconfig.legacy.json",
    "test:types:ts50": "node ../../node_modules/typescript50/lib/tsc.js -p tsconfig.legacy.json",
    "test:types:ts51": "node ../../node_modules/typescript51/lib/tsc.js -p tsconfig.legacy.json",
    "test:types:ts52": "node ../../node_modules/typescript52/lib/tsc.js -p tsconfig.legacy.json",
    "test:types:ts53": "tsc",
    "test:lib": "vitest --retry=3",
    "test:lib:dev": "pnpm run test:lib --watch",
    "test:build": "publint --strict && attw --pack",
    "build": "tsup",
    "build:watch": "tsup --watch"
  },
  "type": "module",
  "main": "./build/index.cjs",
  "module": "./build/index.js",
  "types": "./build/index.d.ts",
  "browser": {},
  "exports": {
    ".": {
      "import": {
        "types": "./build/modern/index.d.ts",
        "default": "./build/modern/index.js"
      },
      "require": {
        "types": "./build/modern/index.d.cts",
        "default": "./build/modern/index.cjs"
      }
    },
    "./package.json": "./package.json"
  },
  "sideEffects": false,
  "files": [
    "dist",
    "src"
  ],
  "dependencies": {
    "@tanstack/query-core": "workspace:*"
  },
  "devDependencies": {
    "@open-wc/testing-helpers": "3.0.1",
    "@types/jest-when": "3.5.5",
    "jest-when": "3.6.0",
    "lit": "3.1.4"
  },
  "peerDependencies": {
    "lit": "^2.7.0 || ^3.0.0"
  }
}
